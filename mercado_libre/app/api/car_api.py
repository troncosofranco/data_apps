# -*- coding: utf-8 -*-
"""Car_API.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CLF-aC-AcRBlmF6p2h2BNs_vUNY-jfRm
"""

# Import Needed Libraries
import joblib
import uvicorn
import numpy as np
import pandas as pd
from pydantic import BaseModel

# FastAPI libray
from fastapi import FastAPI

# Initiate app instance
app = FastAPI(title='Car Price Prediction', version='1.0',
              description='Linear Regression model is used for prediction')

# Initialize model artifacte files. This will be loaded at the start of FastAPI model server.
model = joblib.load("pipe_new.joblib")

# This struture will be used for Json validation.
# With just that Python type declaration, FastAPI will perform below operations on the request data
## 1) Read the body of the request as JSON.
## 2) Convert the corresponding types (if needed).
## 3) Validate the data.If the data is invalid, it will return a nice and clear error, 
##    indicating exactly where and what was the incorrect data.
class Data(BaseModel):
    company: str
    model: str
    year: int
    fuel: str
    door: int
    transmisions: str
    motor: float
    bodywork: str  
    

# Api root or home endpoint
@app.get('/')
@app.get('/home')
def read_home():
    """
     Home endpoint which can be used to test the availability of the application.
     """
    return {'message': 'System is ok'}

# ML API endpoint for making prediction aganist the request received from client
@app.post("/predict")
def predict(data: Data):

    result = model.predict(pd.DataFrame(columns=['company','model','year','fuel', 'doors','transmisions','motor','bodywork'],data=np.array([data.company,data.model,data.year,data.fuel,data.doors,data.transmisions, data.motor, data.bodywork]).reshape(1,8)))[0]
    return result

if __name__ == '__main__':
    uvicorn.run("main:app", host="127.0.0.1", port=8000, reload=True)